options:
  parameters:
    author: Frate, M.
    catch_exceptions: 'True'
    category: '[GRC Hier Blocks]'
    cmake_opt: ''
    comment: ''
    copyright: ''
    description: SpuR - An Spectral Signature Reader System in Chipless Tags Using
      Software Defined Radio (SDR)
    gen_cmake: 'On'
    gen_linking: dynamic
    generate_options: qt_gui
    hier_block_src_path: '.:'
    id: SpuR_Reader
    max_nouts: '0'
    output_language: python
    placement: (0,0)
    qt_qss_theme: ''
    realtime_scheduling: ''
    run: 'True'
    run_command: '{python} -u {filename}'
    run_options: prompt
    sizing_mode: fixed
    thread_safe_setters: ''
    title: SpuR - An Spectral Signature Reader System in Chipless Tags Using Software
      Defined Radio (SDR)
    window_size: (1000,1000)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 8]
    rotation: 0
    state: enabled

blocks:
- name: a_s
  id: variable_qtgui_range
  parameters:
    comment: ''
    gui_hint: 0,1,1,1
    label: Saw Tooth amplitude
    min_len: '100'
    orient: QtCore.Qt.Horizontal
    rangeType: float
    start: '0'
    step: '0.1'
    stop: '50'
    value: ampl_conf
    widget: counter_slider
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [528, 12.0]
    rotation: 180
    state: true
- name: ampl_conf
  id: variable_config
  parameters:
    comment: ''
    config_file: /mnt/d/Compartilhada/SpuR/conf.txt
    option: a_s
    section: main
    type: real
    value: '1'
    writeback: a_s
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [528, 148.0]
    rotation: 0
    state: true
- name: amplitude
  id: variable_qtgui_label
  parameters:
    comment: ''
    formatter: None
    gui_hint: 2,1,1,1
    label: Amplitude
    type: int
    value: fun_prob
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [200, 12.0]
    rotation: 0
    state: enabled
- name: attenua
  id: variable_qtgui_range
  parameters:
    comment: ''
    gui_hint: 1,0,1,1
    label: Attenuation TX (dB)
    min_len: '100'
    orient: QtCore.Qt.Horizontal
    rangeType: int
    start: '0'
    step: '1'
    stop: '73'
    value: attenua_conf
    widget: counter_slider
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [696, 12.0]
    rotation: 0
    state: true
- name: attenua_conf
  id: variable_config
  parameters:
    comment: ''
    config_file: /mnt/d/Compartilhada/SpuR/conf.txt
    option: attenua
    section: main
    type: int
    value: '9'
    writeback: attenua
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [696, 148.0]
    rotation: 0
    state: true
- name: freq
  id: variable_qtgui_range
  parameters:
    comment: ''
    gui_hint: 0,0,1,1
    label: Frequency
    min_len: '100'
    orient: QtCore.Qt.Horizontal
    rangeType: float
    start: '0'
    step: '0.1'
    stop: '1000'
    value: freq_conf
    widget: counter_slider
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [360, 12.0]
    rotation: 180
    state: true
- name: freq_conf
  id: variable_config
  parameters:
    comment: ''
    config_file: /mnt/d/Compartilhada/SpuR/conf.txt
    option: freq
    section: main
    type: real
    value: '10'
    writeback: freq
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [360, 148.0]
    rotation: 0
    state: true
- name: freqc
  id: variable
  parameters:
    comment: ''
    value: python_mod.sweeper(fun_prob)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [160, 196.0]
    rotation: 0
    state: true
- name: frequency
  id: variable_qtgui_label
  parameters:
    comment: ''
    formatter: None
    gui_hint: 2,0,1,1
    label: Frequency
    type: real
    value: freqc
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [200, 100.0]
    rotation: 0
    state: enabled
- name: fun_prob
  id: variable_function_probe
  parameters:
    block_id: probSign
    comment: ''
    function_args: ''
    function_name: level
    poll_rate: '1'
    value: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 196.0]
    rotation: 0
    state: true
- name: gain_conf
  id: variable_config
  parameters:
    comment: ''
    config_file: /mnt/d/Compartilhada/SpuR/conf.txt
    option: rx_gain
    section: main
    type: int
    value: '72'
    writeback: rx_gain
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [864, 148.0]
    rotation: 0
    state: true
- name: rx_gain
  id: variable_qtgui_range
  parameters:
    comment: ''
    gui_hint: 1,1,1,1
    label: RX Gain (dB)
    min_len: '100'
    orient: QtCore.Qt.Horizontal
    rangeType: int
    start: '0'
    step: '1'
    stop: '73'
    value: gain_conf
    widget: counter_slider
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [864, 12.0]
    rotation: 0
    state: true
- name: samp_rate
  id: variable
  parameters:
    comment: ''
    value: '25000000'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [88, 124.0]
    rotation: 0
    state: enabled
- name: taps
  id: variable
  parameters:
    comment: ''
    value: '64'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 124.0]
    rotation: 0
    state: enabled
- name: analog_sig_source_x_0_0
  id: analog_sig_source_x
  parameters:
    affinity: ''
    alias: ''
    amp: a_s
    comment: ''
    freq: freq
    maxoutbuf: '0'
    minoutbuf: '0'
    offset: '0'
    phase: '0'
    samp_rate: samp_rate
    type: float
    waveform: analog.GR_CONST_WAVE
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [288, 332.0]
    rotation: 0
    state: enabled
- name: blocks_complex_to_mag_squared_0
  id: blocks_complex_to_mag_squared
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [296, 560.0]
    rotation: 0
    state: true
- name: blocks_moving_average_xx_0
  id: blocks_moving_average_xx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    length: '500000'
    max_iter: '4000'
    maxoutbuf: '0'
    minoutbuf: '0'
    scale: '0.000002'
    type: float
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [472, 532.0]
    rotation: 0
    state: true
- name: blocks_multiply_const_vxx_0
  id: blocks_multiply_const_vxx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    const: '10'
    maxoutbuf: '0'
    minoutbuf: '0'
    type: float
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [664, 556.0]
    rotation: 0
    state: true
- name: blocks_nlog10_ff_0
  id: blocks_nlog10_ff
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    k: '0'
    maxoutbuf: '0'
    minoutbuf: '0'
    n: '10'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [832, 556.0]
    rotation: 0
    state: true
- name: hilbert_fc_0_0_0_0
  id: hilbert_fc
  parameters:
    affinity: ''
    alias: ''
    beta: '6.76'
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    num_taps: '64'
    win: window.WIN_HAMMING
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [552, 372.0]
    rotation: 0
    state: enabled
- name: iio_pluto_sink_0_0
  id: iio_pluto_sink
  parameters:
    affinity: ''
    alias: ''
    attenuation1: attenua
    bandwidth: '20000000'
    buffer_size: '32768'
    comment: ''
    cyclic: 'False'
    filter: ''
    filter_source: '''Auto'''
    fpass: '0'
    frequency: freqc
    fstop: '0'
    len_tag_key: ''
    samplerate: '520834'
    type: fc32
    uri: ip:192.168.2.1
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [744, 316.0]
    rotation: 0
    state: enabled
- name: iio_pluto_source_0_0_0_0
  id: iio_pluto_source
  parameters:
    affinity: ''
    alias: ''
    bandwidth: '20000000'
    bbdc: 'False'
    buffer_size: '32768'
    comment: ''
    filter: ''
    filter_source: '''Auto'''
    fpass: '0'
    frequency: freqc
    fstop: '0'
    gain1: '''manual'''
    len_tag_key: packet_len
    manual_gain1: rx_gain
    maxoutbuf: '0'
    minoutbuf: '0'
    quadrature: 'False'
    rfdc: 'False'
    samplerate: '520834'
    type: fc32
    uri: ip:192.168.2.1
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [40, 476.0]
    rotation: 0
    state: enabled
- name: probSign
  id: blocks_probe_signal_x
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    type: float
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [960, 556.0]
    rotation: 0
    state: true
- name: python_mod
  id: epy_module
  parameters:
    alias: ''
    comment: ''
    source_code: "#Leitor SDR\nimport matplotlib.pyplot as plt\nfrom matplotlib.widgets\
      \ import Cursor\nimport numpy as np\nimport pandas as pd\n\nf1 =   70000000\n\
      f2 = 6000000000\nstep = 10000000\nf = f1\ntag=0\namp=0\nresult=[]\nmag=[]\n\
      freq=[]\n\ndef figuraDupla(tag,freq1, mag1, freq2, mag2):\n    fig = plt.figure(figsize=(14,\
      \ 10))\n    # Adding the axes to the figure\n    ax = fig.add_axes([0.1, 0.1,\
      \ 0.85, 0.85])\n    # plotting 1st dataset to the figure\n    xFtemp = np.array(freq1)\n\
      \    xF = np.array(freq2)\n    yFtemp = np.array(mag1)\n    yF = np.array(mag2)\n\
      \    ax1 = ax.plot(xFtemp, yFtemp)\n    # plotting 2nd dataset to the figure\n\
      \    ax2 = ax.plot(xF, yF)\n\n    # Setting Title\n    ax.set_title(\"TAG N\xBA\
      \ = \"+tag)\n\n    # Setting Label\n    ax.set_xlabel(\"X-Axis\")\n    ax.set_ylabel(\"\
      Y-Axis\")\n\n    # Adding Legend\n    ax.legend(labels=('TEMPLATE', 'TAG LIDA,\
      \ N\xBA: '+tag))\n    # cursor\n    ax.set_xlabel('Frequ\xEAncia')\n    ax.set_ylabel('Magnitude')\n\
      \    cursor = Cursor(ax, color='green', linewidth=1.3)\n    plt.show()\n   \
      \ \ndef figura(freq, mag):\n\txF = np.array(freq)\n\tyM = np.array(mag)\n\t\
      fig = plt.figure(figsize=(14, 10))\n\tax = fig.add_axes([0.1, 0.1, 0.85, 0.85])\n\
      \tax.plot(xF, yM)\n\tplt.xticks(rotation=45)\n\tax.set_xlabel('Frequency (MHz)')\n\
      \tax.set_ylabel('Relative Gain (dB)')\n\tplt.title('Chipless RFID Reader')\n\
      \tcursor = Cursor(ax, color='green', linewidth=1.2)\n\tplt.show()\n\ndef expDados(freq,\
      \ mag):\n\trfidSet = pd.DataFrame({'Freq': freq, 'Mag': mag})\n\trfidSet.to_csv(\"\
      /mnt/d/Compartilhada/SpuR/tag.csv\", index = False)\t\n\ndef calcEuc(magT, mag):\n\
      \    xTemp = np.array(magT)\n    xTag = np.array(mag)\n    distE = np.linalg.norm(xTemp\
      \ - xTag)\n    return(distE)\n    \ndef compTag(tagF,tagM):\n\trfidTemp = pd.read_csv(\"\
      /mnt/d/Compartilhada/SpuR/Results/BDV90.csv\")\n\t\n\t#tag0\n\ttag0M = rfidTemp['Cod']\
      \ == 0\n\ttag0M = rfidTemp[tag0M]\n\ttag0M = tag0M['Mag']\n\ttag0F = rfidTemp['Cod']\
      \ == 0\n\ttag0F = rfidTemp[tag0F]\n\ttag0F = tag0F['Freq']\n\t\n\t#tag1\n\t\
      tag1M = rfidTemp['Cod'] == 1\n\ttag1M = rfidTemp[tag1M]\n\ttag1M = tag1M['Mag']\n\
      \ttag1F = rfidTemp['Cod'] == 1\n\ttag1F = rfidTemp[tag1F]\n\ttag1F = tag1F['Freq']\n\
      \t\n\t#tag2\n\ttag2M = rfidTemp['Cod'] == 2\n\ttag2M = rfidTemp[tag2M]\n\ttag2M\
      \ = tag2M['Mag']\n\ttag2F = rfidTemp['Cod'] == 2\n\ttag2F = rfidTemp[tag2F]\n\
      \ttag2F = tag2F['Freq']\n\n\t#tag3\n\ttag3M = rfidTemp['Cod'] == 3\n\ttag3M\
      \ = rfidTemp[tag3M]\n\ttag3M = tag3M['Mag']\n\ttag3F = rfidTemp['Cod'] == 3\n\
      \ttag3F = rfidTemp[tag3F]\n\ttag3F = tag3F['Freq']\n\t\n\t#tag4\n\ttag4M = rfidTemp['Cod']\
      \ == 4\n\ttag4M = rfidTemp[tag4M]\n\ttag4M = tag4M['Mag']\n\ttag4F = rfidTemp['Cod']\
      \ == 4\n\ttag4F = rfidTemp[tag4F]\n\ttag4F = tag4F['Freq']\n\n\t\n\t#Calcula\
      \ Dist\xE2ncia Euclediana\n\tx0 = calcEuc(tag0M, tagM)\n\tx1 = calcEuc(tag1M,\
      \ tagM)\n\tx2 = calcEuc(tag2M, tagM)\n\tx3 = calcEuc(tag3M, tagM)\n\tx4 = calcEuc(tag4M,\
      \ tagM)\n\t\n\t#Verifica qual \xE9 a etiqueta\n\n\tif (x0 < x1) and (x0 < x2)\
      \ and (x0 < x3) and (x0 < x4):\n\t\ttag = \"0\"\n\t\tfiguraDupla(tag, tag0F,\
      \ tag0M, tagF, tagM)\n\telif (x1 < x0) and (x1 < x2) and (x1 < x3) and (x0 <\
      \ x4):\n\t\ttag = \"1\"\n\t\tfiguraDupla(tag, tag1F, tag1M, tagF, tagM)\n\t\
      elif (x2 < x0) and (x2 < x1) and (x2 < x3) and (x2 < x4):\n\t\ttag = \"2\"\n\
      \t\tfiguraDupla(tag, tag2F, tag2M, tagF, tagM)\n\telif (x3 < x0) and (x3 < x1)\
      \ and (x3 < x2) and (x3 < x4):\n\t\ttag = \"3\"\n\t\tfiguraDupla(tag, tag3F,\
      \ tag3M, tagF, tagM)\n\telif (x4 < x0) and (x4 < x1) and (x4 < x2) and (x4 <\
      \ x3):\n\t\ttag = \"4\"\n\t\tfiguraDupla(tag, tag4F, tag4M, tagF, tagM)\n\t\n\
      \n\n\n\t\ndef truncate(num, n):\n    integer = int(num * (10**n))/(10**n)\n\
      \    return float(integer)\n\ndef sweeper(prob_lvl):\n\tglobal f1, f2, f, step,\
      \ result, amp, mag, freq\n\tif prob_lvl:\n\t\tamp = (prob_lvl)\n\t\tresult.append({f,\
      \ amp})\n\t\tmagR=truncate(amp, 4)\n\t\tmag.append(magR)\n\t\tfreq.append(int(f/1000000))\n\
      \t\tf +=step\n\t\tamp = 0\n\tif f> f2:\n\t\txF=np.array(freq)\n\t\tyM=np.array(mag)\n\
      \t\texpDados(xF, yM)\n\t\t#figura(freq, mag)\n\t\tcompTag(freq, mag)\n\t\tf=f1\n\
      \t\t#print(\"Resultado \", result)\n\t\t#print(\"Frequ\xEAncia\", freq)\n\t\t\
      print(\"Tag N\xBA \",tag)\n\t\tfreq=[]\n\t\tmag=[]\n\t\tresult=[]\n\treturn\
      \ f\n"
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [16, 308.0]
    rotation: 0
    state: enabled
- name: qtgui_time_sink_x_0
  id: qtgui_time_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    axislabels: 'True'
    color1: blue
    color10: dark blue
    color2: red
    color3: green
    color4: black
    color5: cyan
    color6: magenta
    color7: yellow
    color8: dark red
    color9: dark green
    comment: ''
    ctrlpanel: 'False'
    entags: 'False'
    grid: 'True'
    gui_hint: 4,0,1,1
    label1: Signal 1
    label10: Signal 10
    label2: ''
    label3: Signal 3
    label4: Signal 4
    label5: Signal 5
    label6: Signal 6
    label7: Signal 7
    label8: Signal 8
    label9: Signal 9
    legend: 'True'
    marker1: '-1'
    marker10: '-1'
    marker2: '-1'
    marker3: '-1'
    marker4: '-1'
    marker5: '-1'
    marker6: '-1'
    marker7: '-1'
    marker8: '-1'
    marker9: '-1'
    name: '""'
    nconnections: '1'
    size: '1024'
    srate: samp_rate
    stemplot: 'False'
    style1: '1'
    style10: '1'
    style2: '1'
    style3: '1'
    style4: '1'
    style5: '1'
    style6: '1'
    style7: '1'
    style8: '1'
    style9: '1'
    tr_chan: '0'
    tr_delay: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_slope: qtgui.TRIG_SLOPE_POS
    tr_tag: '""'
    type: float
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    ylabel: Amplitude
    ymax: '14'
    ymin: '-0'
    yunit: '""'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [552, 436.0]
    rotation: 0
    state: true
- name: qtgui_time_sink_x_1
  id: qtgui_time_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    axislabels: 'True'
    color1: blue
    color10: dark blue
    color2: red
    color3: green
    color4: black
    color5: cyan
    color6: magenta
    color7: yellow
    color8: dark red
    color9: dark green
    comment: ''
    ctrlpanel: 'False'
    entags: 'True'
    grid: 'False'
    gui_hint: 4,1,1,1
    label1: Signal 1
    label10: Signal 10
    label2: Signal 2
    label3: Signal 3
    label4: Signal 4
    label5: Signal 5
    label6: Signal 6
    label7: Signal 7
    label8: Signal 8
    label9: Signal 9
    legend: 'True'
    marker1: '-1'
    marker10: '-1'
    marker2: '-1'
    marker3: '-1'
    marker4: '-1'
    marker5: '-1'
    marker6: '-1'
    marker7: '-1'
    marker8: '-1'
    marker9: '-1'
    name: '""'
    nconnections: '1'
    size: '1024'
    srate: samp_rate
    stemplot: 'False'
    style1: '1'
    style10: '1'
    style2: '1'
    style3: '1'
    style4: '1'
    style5: '1'
    style6: '1'
    style7: '1'
    style8: '1'
    style9: '1'
    tr_chan: '0'
    tr_delay: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_slope: qtgui.TRIG_SLOPE_POS
    tr_tag: '""'
    type: float
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    ylabel: Amplitude
    ymax: '20'
    ymin: '-20'
    yunit: '""'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [744, 672.0]
    rotation: 0
    state: true

connections:
- [analog_sig_source_x_0_0, '0', hilbert_fc_0_0_0_0, '0']
- [analog_sig_source_x_0_0, '0', qtgui_time_sink_x_0, '0']
- [blocks_complex_to_mag_squared_0, '0', blocks_moving_average_xx_0, '0']
- [blocks_moving_average_xx_0, '0', blocks_multiply_const_vxx_0, '0']
- [blocks_multiply_const_vxx_0, '0', blocks_nlog10_ff_0, '0']
- [blocks_nlog10_ff_0, '0', probSign, '0']
- [blocks_nlog10_ff_0, '0', qtgui_time_sink_x_1, '0']
- [hilbert_fc_0_0_0_0, '0', iio_pluto_sink_0_0, '0']
- [iio_pluto_source_0_0_0_0, '0', blocks_complex_to_mag_squared_0, '0']

metadata:
  file_format: 1
